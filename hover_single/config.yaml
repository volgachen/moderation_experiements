worker_nums: 3
max_iterations: 150
prompt:
  role_desc: |
    You are a prompt expert.
  user_message_template: |
    def obtain_user_message(task_desc, parent_program, insights):
        feedback_str = parent_program["feedback"].split("==^&*(split-part)==")[0]
        return f'''
    <task_description>
    {task_desc}
    </task_description>

    We call a group of four system prompts that satisfying the requirements in <task_description> a program, and we are iteratively refining programs to pursue higher performance on this task.
    Here is a previous version:
    <program>
    {parent_program['program']}
    </program>
    When evaluating these system prompts on a validation set to calculate the metric, we get the following results:
    - accuracy: {parent_program['metrics']['acc']}. This metric is defined as the proportion of queries for which the program successfully retrieves all required target passages.

    To understand how the program succeeds or fails, we conducted a reflective analysis. We presented an advanced LLM with full response trajectories and tasked it with self-critique. The output is a set of insights into systemic weaknesses and concrete suggestions for improvement, summarized below:
    {feedback_str}

    # Your task

    Optimize <system_prompt_1>, <system_prompt_2>, <system_prompt_3>, and <system_prompt_4> to provide clearer, more effective guidance for their corresponding steps.
    Ensure overall accuracy is maximized, so that all true passages are contained in the final three retrieval results.
    You may perform multiple iterations of improvement, but you cannot modify content inside angle brackets such as <system_prompt_1>.
    The program must always contain exactly four system prompts, each in the format: <system_prompt_x> ... </system_prompt_x>.

    To achieve the task, please propose modifications to the old <program>. The only modification you can make is replacement, i.e., replacing [Original code lines] with [Modified code lines]. Please describe each change with a SEARCH/REPLACE block described as following:
    <<<<<<< SEARCH
    [Original code lines]
    =======
    [Modified code lines]
    >>>>>>> REPLACE
    '''
  diff_mode: true
  program_checker: |
    def check_program(program):
        return 4 == len(re.findall(r"<system_prompt_\d+>.*?</system_prompt_\d+>", program, flags=re.DOTALL))

sample:
  num: 1
  method: island
islands:
  num_islands: 3           # 总共有 5 个岛屿
  reset_interval: 400  # 每 30 步重置一次岛屿
  migration_interval: 400    # 每 10 步做一次迁移
  migration_ratio: 0.0     # 迁移比例（0% 个体）
  population_limit: 10    # 每个岛屿最多保存 10 个个体
  remove_policy: definite
  include_metrics: 
    - acc   # 岛屿使用的主要评价指标
  limit_all_population: false
  # init_from_job_id: 2319

evaluation:
  addrs:
    - http://10.10.1.129:9000
  metrics:
    - name: acc
      expected: 1.0
      higher_is_better: true
  cpu_bound: true
  worker_nums: 10
  timeout_secs: 9600
llm_ensemble:
  - name: gpt-4.1-mini
    weight: 1

custom_config:
  model_name: openai/gpt-4.1-mini

tolerate_same_program: true # HACK current evolver has a bug that the flag is wrong