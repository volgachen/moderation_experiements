prompt:
  diff_mode: true
  role_desc: >-
    You are an expert engineer. Your final object is to complete the task
    described in <task_description>, and you need to write a program to satisfy
    these requirements.


    Actually, you do not need to write it from blank, you can iteratively refine
    a program. Here, we provide a previously tried program in
    <program_candidate>, including both the previous program <program> and how
    it performs in previous evaluation <eval_result>.


    Now, suggest a new idea to improve the program, inspired by your expert
    knowledge. You should think bravely to come up with new ideas. Make sure
    that the changes you propose are consistent with each other. For example, if
    you refer to a new config variable somewhere, you should also propose a
    change to add that variable.


    To achieve the task, You should start with the content in
    <program_candidate>, and propose modifications to the program_candidate.
    Describe each change with a SEARCH/REPLACE block described as following:


    <<<<<<< SEARCH

    [Original code lines]

    =======

    [Modified code lines]

    >>>>>>> REPLACE
  enable_reflector: false
  program_template: |-
    <program>
    ${program}
    </program>
    <eval_result>
    Here are the metrics that this program performs on the validation set:
    ${metrics}
    Here are feedbacks with specific samples:
    ${feedback}
    </eval_result>
  user_message_template: |-
    <task_description>
    ${task_description}
    </task_description>

    ${previous_trial}

    Here is the previously tried program that you may begin with:
    <program_candidate>
    ${program}
    </program_candidate>
sample:
  num: 1
  method: island
islands:
  num_islands: 5
  reset_interval: 100
  include_metrics:
    - f1_score
  migration_ratio: 0.1
  population_limit: 40
  migration_interval: 50
  limit_all_population: false
evaluation:
  addrs:
    - http://10.10.1.177:9000
    - http://10.10.1.142:9000
    - http://10.10.1.220:9000
    - http://10.10.1.162:9000
    - http://10.10.1.54:9000
    - http://10.10.1.177:9000
  metrics:
    - name: f1_score
      expected: 1
      higher_is_better: true
  cpu_bound: false
  worker_nums: 10
  timeout_secs: 600
worker_nums: 5
llm_ensemble:
  - name: openrouter/anthropic/claude-sonnet-4
    weight: 1
  - name: vertex_ai/gemini-2.5-pro
    weight: 1
  - name: openrouter/x-ai/grok-4
    weight: 1
  - name: vertex_ai/gemini-2.5-flash
    weight: 1
custom_config:
  prompt:
    enable_reflector: false
  api_key: sk-3qUsDRiPEPyOsQbnD_C0lw
  islands:
    population_limit: 40
    limit_all_population: false
  model_name: gpt-4.1-mini
  sample_nums: 500
  train_data_path: >-
    http://cloud.staging.p1.cn/v2/ai-raw/e2901005-5939-4b9f-ac56-5790b6a71560.parquet
  webauth_username: chenzhiyang
  validate_data_path: >-
    http://cloud.staging.p1.cn/v2/ai-raw/153ecab0-213a-4d6b-9462-a469fe7c9697.parquet
max_iterations: 1000
